plugins {
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
    id 'net.darkhax.curseforgegradle' version '1.+'
    id 'se.bjurr.gitchangelog.git-changelog-gradle-plugin' version '1.71.8'
    id 'com.modrinth.minotaur' version '2.+'
}

repositories {
    maven {
        // location of the maven that hosts Mantle and JEI files
        name = 'Progwml6 maven'
        url = 'https://dvs1.progwml6.com/files/maven'
    }
    maven { // TOP
        name 'McJty maven'
        url "https://maven.k-4u.nl"
    }
    flatDir {
        dirs 'libs'
    }
    maven {
        name = "Curse Maven"
        url = "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        // Patchouli && Provider
        name = "Blame Jared"
        url = "https://maven.blamejared.com"
    }
}

group = 'com.github.wendall911.survivalistessentials'
version = "${minecraft_version}-${mod_version}"
archivesBaseName = "${mod_name}"
def mcversion = "${minecraft_version}"
def modid = "${modid}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '17'

minecraft {
    mappings channel: "${mappings_channel}", version: "${mappings_version}-${minecraft_version}"

    runs {
        client {
            workingDirectory project.file("run").canonicalPath
            arg "-mixin.config=${modid}.mixins.json"
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                survivalistessentials {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            arg "-mixin.config=${modid}.mixins.json"
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                survivalistessentials {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            arg "-mixin.config=${modid}.mixins.json"
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            args '--mod', 'survivalistessentials',
                    '--all',
                    '--output', file('src/generated/resources/'),
                    '--existing', file('src/main/resources/'),
                    '--existing', file('src/generated/resources')

            mods {
                survivalistessentials {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    annotationProcessor "org.spongepowered:mixin:${mixin_version}:processor"

    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}")
    runtimeOnly fg.deobf("curse.maven:jei_integration-265917:3812175")

    runtimeOnly fg.deobf("mcjty.theoneprobe:theoneprobe:${minecraft_short_version}-${probe_version}") {
        transitive = false
    }

    compileOnly fg.deobf("curse.maven:carryon-274259:3674344")

    implementation fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}")
    implementation fg.deobf("xyz.brassgoggledcoders:PatchouliProvider:${patchouli_provider_version}")

    //runtimeOnly fg.deobf("curse.maven:crafttweaker-239197:3918220")

    //Include some examples here for testing other mods
    //runtimeOnly fg.deobf("curse.maven:terrablender-563928:${terrablender_version}")
    //runtimeOnly fg.deobf("curse.maven:byg-247560:${byg_version}")
    //runtimeOnly fg.deobf("curse.maven:citadel-331936:3783096")
    //runtimeOnly fg.deobf("curse.maven:alexs_mobs-426558:3853078")
    //runtimeOnly fg.deobf("curse.maven:architectury-419699:3983970")
    //runtimeOnly fg.deobf("curse.maven:betteranimalsplus-303557:3680864")
    //runtimeOnly fg.deobf("curse.maven:sushigocrafting-452500:3758195")
    //runtimeOnly fg.deobf("curse.maven:titanium-287342:3707558")
    //runtimeOnly fg.deobf("curse.maven:patchouli-306770:3846086")
    //runtimeOnly fg.deobf("curse.maven:curios-309927:3841948")
    //runtimeOnly fg.deobf("curse.maven:botania-225643:3936568")
    //runtimeOnly fg.deobf("curse.maven:immersiveengineering-231951:3755665")
    //runtimeOnly fg.deobf("curse.maven:buildinggadgets-298187:3725903")
    //runtimeOnly fg.deobf("curse.maven:homeostatic-634466:3845248")
    //runtimeOnly fg.deobf("curse.maven:twilightforest-227639:4337390")
    //runtimeOnly fg.deobf("curse.maven:oreganized-439153:3819472")
    //runtimeOnly fg.deobf("curse.maven:macawswindows-363569:3712019")
    //runtimeOnly fg.deobf("curse.maven:configured-457570:3721946")
    //runtimeOnly fg.deobf("curse.maven:catalogue-459701:3803098")
    //runtimeOnly fg.deobf("curse.maven:electrodynamics-316867:3784685")
    //runtimeOnly fg.deobf("curse.maven:valhesia_core-416935:3768769")
    //runtimeOnly fg.deobf("curse.maven:valhesia_structures-347488:3708292")
    //runtimeOnly fg.deobf("curse.maven:geckolib-388172:3989823")
    //runtimeOnly fg.deobf("curse.maven:ars_nouveau-401955:3950802")
    //runtimeOnly fg.deobf("curse.maven:exnihilo-400012:3874541")
    //runtimeOnly fg.deobf("curse.maven:undergarden-379849:3810810")
    //runtimeOnly fg.deobf("curse.maven:dynamictrees-252818:3831578")
    //runtimeOnly fg.deobf("curse.maven:ecologics-570463:3987878")
    //runtimeOnly fg.deobf("curse.maven:lodestone-616457:4616315")
    //runtimeOnly fg.deobf("curse.maven:malum-484064:4631612")
    //runtimeOnly fg.deobf("curse.maven:iceandfire-264231:4614465")

    implementation fg.deobf(fileTree(dir: 'libs', include: '*.jar'))
}

def commonManifest = {
    attributes 'FMLAT': 'survivalistessentials_at.cfg'
}

jar {
    manifest {
        attributes([
            "Specification-Title": mod_name,
            "Specification-Vendor": "${mod_author}",
            "Specification-Version": "${archiveVersion}",
            "Implementation-Title": "${mod_name}",
            "Implementation-Version": "${archiveVersion}",
            "Implementation-Vendor" :"${mod_author}",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "${modid}.mixins.json"
        ])
    }
}

mixin {
    add sourceSets.main, "${modid}.refmap.json"
}

def resourceTargets = ['META-INF/mods.toml', 'pack.mcmeta', '*.mixins.json']
def replaceProperties = [ 'version': version,
    'issue_tracker': issue_tracker, 'license': license, 'modid': modid, 'display_name': display_name,
    'description': description, 'display_url': display_url, 'update_url': update_url, 'authors': authors,
    'credits': credits, 'logo_file': logo_file, 'minecraft_version_range': minecraft_version_range,
    'forge_version_range': forge_version_range, "loader_version_range": loader_version_range
]

processResources {
    duplicatesStrategy(DuplicatesStrategy.FAIL)
    inputs.properties replaceProperties
    exclude '.cache'
    replaceProperties.put 'project', project

    filesMatching(resourceTargets) {
        expand replaceProperties
    }
}

jar.finalizedBy('reobfJar', 'signJar')

def updates = tasks.register("generateUpdates", Copy) {
    it.outputs.upToDateWhen {
        false
    }

    it.from("./files/templates/") {
        include 'updates.json'
        expand 'mod_version': mod_version
    }

    it.into 'files/'
}

def changelogFile = 'build/libs/' + project.getName() + '-' + version + '-changelog.txt'

task curseforge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
    if (project.hasProperty('securseApiKey')) {
        apiToken = project.securseApiKey
        def mainFile = upload(project.securseId, file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar"))
        mainFile.changelog = file(changelogFile)
        mainFile.addJavaVersion('Java 17')
        mainFile.addModLoader('Forge')
        mainFile.releaseType = "${release_type}"
        "${release_versions}".split(',').each {
            mainFile.addGameVersion("${it}")
        }
        mainFile.addOptional('configured')
        mainFile.addOptional('catalogue')
        mainFile.addOptional('fruit-trees')
        mainFile.addOptional('quark')
        mainFile.addOptional('biomes-o-plenty')
        mainFile.addOptional('all-you-can-eat')
        mainFile.addOptional('water-source')
        mainFile.addOptional('sushigocrafting')
        mainFile.addOptional('botania')
        mainFile.addOptional('ars-nouveau')
        mainFile.addOptional('ex-nihilo-sequentia')
        mainFile.addOptional('the-undergarden')
        mainFile.addOptional('dynamictrees')
        mainFile.addOptional('oh-the-biomes-youll-go')
        mainFile.addOptional('the-twilight-forest')
        mainFile.addOptional('ecologics')
        mainFile.addOptional('alexs-mobs')
        mainFile.addOptional('betteranimalsplus')
        mainFile.addOptional('malum')
        mainFile.addOptional('ice-and-fire-dragons')
    }
}

tasks.curseforge.dependsOn build

modrinth {
    if (project.hasProperty('seModrinthId')) {
        token = project.modrinthKey
        projectId = project.seModrinthId
        version = getVersion()
        versionType = "${release_type}"
        if (file(changelogFile).exists()) {
            changelog = file(changelogFile).text
        }
        uploadFile = file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar")
        gameVersions = "${release_versions}".split(",") as List<String>
        dependencies {
            optional.project 'quark'
            optional.project 'allyoucaneat'
            optional.project 'botania'
            optional.project 'ex-nihilo-sequentia'
            optional.project 'dynamictrees'
            optional.project 'biomesyougo'
            optional.project 'ecologics'
        }
    }
}

tasks.modrinth.dependsOn build

task changelog(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
    file = new File(changelogFile);
    templateContent = file('files/templates/changelog.mustache').getText('UTF-8');
    fromRepo = file("$projectDir");
    toRef = "HEAD";
    fromRef = "${last_mod_version}";
}

tasks.build.dependsOn('changelog', 'generateUpdates')

// Jar Signing
import net.minecraftforge.gradle.common.tasks.SignJar

task signJar(type: SignJar, dependsOn: jar) {
    dependsOn 'reobfJar'

    // Skip the task if our secret data isn't available
    onlyIf {
        project.hasProperty('keyStore')
    }

    keyStore = project.keyStore // This needs to be a path to the keystore file
    alias = project.keyStoreAlias
    storePass = project.keyStorePass
    keyPass = project.keyStoreKeyPass
    inputFile = jar.archiveFile
    outputFile = jar.archiveFile
}

